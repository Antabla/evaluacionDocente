<?php /** 
* Generated by
* 
*      _____ _          __  __      _     _
*     / ____| |        / _|/ _|    | |   | |
*    | (___ | | ____ _| |_| |_ ___ | | __| | ___ _ __
*     \___ \| |/ / _` |  _|  _/ _ \| |/ _` |/ _ \ '__|
*     ____) |   < (_| | | | || (_) | | (_| |  __/ |
*    |_____/|_|\_\__,_|_| |_| \___/|_|\__,_|\___|_|
*
* The code generator that works in many programming languages
*
*			https://www.skaffolder.com
*
*
* You can generate the code from the command-line
*       https://npmjs.com/package/skaffolder-cli
*
*       npm install -g skaffodler-cli
*
*   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *
*
* To remove this comment please upgrade your plan here: 
*      https://app.skaffolder.com/#!/upgrade
*
* Or get up to 70% discount sharing your unique link:
*       https://app.skaffolder.com/#!/register?friend=5d1e567d0e8b622e6162666b
*
* You will get 10% discount for each one of your friends
* 
*/
?>
<?php
	require_once './db/dbevaluacionDocente_dbManager.php';
	
/*
 * SCHEMA DB estudiante
 * 
	{
		apellidos: {
			type: 'String', 
			required : true
		},
		email: {
			type: 'String'
		},
		nombres: {
			type: 'String', 
			required : true
		},
		//RELAZIONI
		
		
		//RELAZIONI ESTERNE
		
		id_estudiante: {
			type: Schema.ObjectId,
			ref : "login"
		},
		
	}
 * 
 */


//CRUD METHODS


//CRUD - CREATE


$app->post('/estudiantes',	function () use ($app){

	$body = json_decode($app->request()->getBody());
	
	$params = array (
		'apellidos'	=> $body->apellidos,
		'email'	=> isset($body->email)?$body->email:'',
		'nombres'	=> $body->nombres,
		
	);

	$obj = makeQuery("INSERT INTO estudiante (_id, apellidos, email, nombres )  VALUES ( null, :apellidos, :email, :nombres   )", $params, false);
    
	
	echo json_encode($body);
	
});
	
//CRUD - REMOVE

$app->delete('/estudiantes/:id',	function ($id) use ($app){
	
	$params = array (
		'id'	=> $id,
	);

	makeQuery("DELETE FROM estudiante WHERE _id = :id LIMIT 1", $params);

});
	
//CRUD - GET ONE
	
$app->get('/estudiantes/:id',	function ($id) use ($app){
	$params = array (
		'id'	=> $id,
	);
	
	$obj = makeQuery("SELECT * FROM estudiante WHERE _id = :id LIMIT 1", $params, false);
	
	
	
	echo json_encode($obj);
	
});
	
	
//CRUD - GET LIST

$app->get('/estudiantes',	function () use ($app){
	makeQuery("SELECT * FROM estudiante");
});


//CRUD - EDIT

$app->post('/estudiantes/:id',	function ($id) use ($app){

	$body = json_decode($app->request()->getBody());
	
	$params = array (
		'id'	=> $id,
		'apellidos'	    => $body->apellidos,
		'email'	    => isset($body->email)?$body->email:'',
		'nombres'	    => $body->nombres
	);

	$obj = makeQuery("UPDATE estudiante SET  apellidos = :apellidos,  email = :email,  nombres = :nombres   WHERE _id = :id LIMIT 1", $params, false);
    
	
	echo json_encode($body);
    	
});


/*
 * CUSTOM SERVICES
 *
 *	These services will be overwritten and implemented in  Custom.js
 */

			
?>